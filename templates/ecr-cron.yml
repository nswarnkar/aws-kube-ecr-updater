apiVersion: v1
kind: ServiceAccount
metadata:
  name: ecr-update-service-account
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: aws-authorization-cluster-role
rules:
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["create", "delete"]
- apiGroups: [""]
  resources: ["serviceaccounts"]
  verbs: ["patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: role-aws-authorization-binding
roleRef:
  apiGroup: ""
  kind: ClusterRole
  name: aws-authorization-cluster-role
subjects:
- kind: ServiceAccount
  name: ecr-update-service-account
  namespace: mention_here_project_namespace # Mention here namespace or default for default namespace
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: aws-registry-credential-cron
spec:
  schedule: "* * * * *"
  successfulJobsHistoryLimit: 2
  failedJobsHistoryLimit: 2
  jobTemplate:
    spec:
      backoffLimit: 4
      template:
        spec:
          serviceAccountName: ecr-update-service-account
          terminationGracePeriodSeconds: 0
          restartPolicy: Never
          containers:
          - name: kubectl
            imagePullPolicy: Always
            image: nswarnkar/aws-ecr-k8:latest
            command:
              - "/run.sh"
            env:
              - name: AWS_ACCOUNT
                value: "mention_here_aws_account_id" #Mention here AWS account Id
              - name: AWS_REGION
                value: "mention_here_aws_region"  #Mention here AWS region
              - name: NAMESPACES
                value: "mention_here_project_namespace"  #Mention here your project name space
              - name: AWS_ACCESS_KEY_ID
                value: "mention_here_aws_access_key" #Mention here IAM access key with ECR Pull access
              - name: AWS_SECRET_ACCESS_KEY 
                value: "mention_here_aws_secret_access_key" #Mention here IAM secret key for above access key